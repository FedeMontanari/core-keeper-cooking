// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider                  = "npx zod-prisma-types"
  output                    = "./zod"
  writeBarrelFiles          = "false"
  useMultipleFiles          = "true"
  createInputTypes          = "false"
  createPartialTypes        = "true"
  createRelationValuesTypes = "true"
  writeNullishInModelTypes  = "true"
  useTypeAssertions         = "true"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
}

model Food {
  id         Int    @id @default(autoincrement())
  name       String
  slug       String
  food_value Int
  icon_url   String
  variation  Int? // Ingame value used to deconstruct cooked items into it's ingredients. Mostly unused here.
  ingame_id  Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  buffs  Buff[]
  rarity Rarity @default(Poor)
}

model Buff {
  id           Int   @id @default(autoincrement())
  value        Float
  duration     Int // Buff duration in seconds
  buff_type_id Int
  food_id      Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  type BuffType @relation(fields: [buff_type_id], references: [id], onDelete: Cascade, map: "typeId")
  Food Food     @relation(fields: [food_id], references: [id], onDelete: Cascade, map: "buffId")
}

model BuffType {
  id         Int     @id @default(autoincrement())
  name       String
  slug       String
  is_percent Boolean @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  buff Buff[]
}

enum Rarity {
  Poor
  Common
  Uncommon
  Rare
  Epic
  Legendary
}
